/*
 * Â© 2023 AO Kaspersky Lab. All Rights Reserved
 * Licensed under the MIT License
 */

/*
 * This code includes EDL descriptions of correspondig external
 * (non-provided by SDK) entities.
 */
use EDL amqp.Publisher
use EDL kl.VfsSdCardFs
use EDL kl.VfsNet

/**
 * Next code enables to send requests from external entities to KOS kernel
 * and get responses. It makes able to use system calls by external entities.
 * Caution! This rule is strictly for early-stage development as it
 * exposes a variety of system services that can be invoked by an attacker.
 * An audit must be performed to determine minimal set of methods to allow.
 */
request src = kl.VfsNet, dst = kl.core.Core
{
    grant()
}

request src = kl.VfsSdCardFs, dst = kl.core.Core
{
    grant()
}

response src = kl.core.Core, dst = kl.VfsNet
{
    grant()
}

response src = kl.core.Core, dst = kl.VfsSdCardFs
{
    grant()
}

request src = kl.rump.Dhcpcd, dst = kl.VfsNet
{
    grant()
}

request src = kl.rump.Dhcpcd, dst = kl.VfsSdCardFs
{
    grant()
}

response src = kl.VfsNet, dst = kl.rump.Dhcpcd
{
    grant()
}

response src = kl.VfsSdCardFs, dst = kl.rump.Dhcpcd
{
    grant()
}

request src = amqp.Publisher, dst = kl.core.Core
{
    grant()
}

response src = kl.core.Core, dst = amqp.Publisher
{
    grant()
}

request src = amqp.Publisher, dst = kl.VfsNet
{
    grant()
}

request src = amqp.Publisher, dst = kl.VfsSdCardFs
{
    grant()
}

response src = kl.VfsNet, dst = amqp.Publisher
{
    grant()
}

response src = kl.VfsSdCardFs, dst = amqp.Publisher
{
    grant()
}
